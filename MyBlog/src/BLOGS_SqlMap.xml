<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
 "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="BLOGS">
	<!-- 为类型定义别名 -->
	<typeAlias alias="baseBlog" type="cn.seu.bingluo.entity.Blog" />
	<typeAlias alias="blog" type="cn.seu.bingluo.entity.BlogPojo" />
	<!-- 定义resultMap,将query结果映射为bean -->
	<resultMap id="BaseBlogResultMap" class="baseBlog">
		<result property="blogId" column="BLOG_ID"/>
		<result property="title" column="TITLE"/>
		<result property="content" column="CONTENT"/>
		<result property="postTime" column="POST_TIME"/>
		<result property="authorId" column="AUTHOR_ID"/>
		<result property="tags" column="TAGS" nullValue=""/>
		<result property="folderId" column="FOLDER_ID"/>
		<result property="commentCount" column="COMMENT_COUNT"/>
		<result property="clickTimes" column="CLICK_TIMES"/>
		<result property="updateTime" column="UPDATE_TIME"/>
	</resultMap>
	<resultMap id="BlogResultMap" class="blog">
		<result property="blogId" column="BLOG_ID"/>
		<result property="title" column="TITLE"/>
		<result property="content" column="CONTENT"/>
		<result property="postTime" column="POST_TIME"/>
		<result property="authorId" column="AUTHOR_ID"/>
		<result property="authorName" column="USER_NAME"/>
		<result property="tags" column="TAGS" nullValue=""/>
		<result property="folderId" column="FOLDER_ID"/>
		<result property="commentCount" column="COMMENT_COUNT"/>
		<result property="clickTimes" column="CLICK_TIMES"/>
		<result property="updateTime" column="UPDATE_TIME"/>
	</resultMap>

	<select id="selectBlogsByBaseAndRange" resultMap="BlogResultMap" parameterClass="java.util.Map">
		<![CDATA[
		SELECT * FROM
			(SELECT a.blog_id,a.title,a.content,a.post_time,b.user_name,a.author_id,a.tags,a.folder_id,a.COMMENT_COUNT,a.click_times,a.UPDATE_TIME
			 FROM BLOGS a,USERS b
			 WHERE a.author_id = b.user_id
			 ORDER BY a.post_time DESC) c
		limit #base#,#range#
		]]>
	</select>

	<select id="selectBlogsByFolderId" resultMap="BlogResultMap" parameterClass="int">
		<![CDATA[
		SELECT a.blog_id,a.title,a.content,a.post_time,b.user_name,a.author_id,a.tags,a.folder_id,a.COMMENT_COUNT,a.click_times,a.UPDATE_TIME
		FROM BLOGS a,USERS b
		WHERE a.folder_id = #folderId# AND a.author_id = b.user_id
		ORDER BY a.post_time DESC
		]]>
	</select>

	<select id="selectBlogsByBaseAndRangeAndTagName" resultMap="BlogResultMap" parameterClass="java.util.Map">
		<![CDATA[
		SELECT * FROM
			(SELECT a.blog_id,a.title,a.content,a.post_time,b.user_name,a.author_id,a.tags,a.folder_id,a.COMMENT_COUNT,a.click_times,a.UPDATE_TIME
			 FROM BLOGS a, USERS b
			 WHERE instr(upper(a.tags), upper(#tagName#))>0 AND a.author_id = b.user_id
			 ORDER BY a.post_time DESC) c
		limit #base#,#range#
		]]>
	</select>

	<select id="selectBlogsCountByUserId" resultClass="int" parameterClass="int">
		<![CDATA[
		SELECT count(*) FROM BLOGS WHERE author_id=#value#
		]]>
	</select>

	<select id="selectAllBlogsCount" resultClass="int">
		<![CDATA[
		SELECT count(*) FROM BLOGS
		]]>
	</select>

	<select id="selectFolderBlogsCount" resultClass="int" parameterClass="int">
		<![CDATA[
		SELECT count(*)
		FROM BLOGS
		WHERE folder_id = #value#
		]]>
	</select>

	<select id="selectTagBlogsCount" resultClass="int" parameterClass="java.lang.String">
		<![CDATA[
		SELECT count(*)
		FROM BLOGS
		WHERE instr(tags, #value#)>0
		]]>
	</select>

	<select id="selectBlogById" resultMap="BlogResultMap" parameterClass="int">
		<![CDATA[
		SELECT a.blog_id,a.title,a.content,a.post_time,b.user_name,a.author_id,a.tags,a.folder_Id,a.COMMENT_COUNT,a.click_Times,a.UPDATE_TIME
		FROM BLOGS a,USERS b
		WHERE a.blog_Id = #value# AND a.author_Id = b.userId
		]]>
	</select>

	<insert id="insertBlog" parameterClass="baseBlog">
		<![CDATA[
		INSERT INTO BLOGS
		(title,content,post_Time,author_Id,tags,folder_Id,COMMENT_COUNT,click_Times,UPDATE_TIME)
		VALUES (#title#,#content#,current_timestamp(),#authorId#,#tags#,#folderId#,#commentCount#,#clickTimes#,current_timestamp())
		]]>
		<selectKey resultClass="int" keyProperty="blogId">
			select last_insert_id() as ID from BLOGS limit 1
		</selectKey>
	</insert>

	<update id="updateBlog" parameterClass="blog">
		<![CDATA[
		UPDATE BLOGS
		SET	title = #title#,
			content = #content#,
			tags = #tags#,
			folder_Id = #folderId#,
			UPDATE_TIME = current_timestamp()
		WHERE blog_Id = #blogId#
		]]>
	</update>

	<update id="addClickTime" parameterClass="int">
		<![CDATA[
		UPDATE BLOGS
		SET	click_Times = clickTimes+1
		WHERE blog_Id = #value#
		]]>
	</update>

	<select id="selectHotBlogs" resultMap="BlogResultMap">
		<![CDATA[
		SELECT * FROM(
			SELECT a.blog_Id,a.title,a.content,a.post_Time,b.user_Name,a.author_Id,a.tags,a.folder_Id,a.COMMENT_COUNT,a.click_Times,a.UPDATE_TIME
			FROM BLOGS a,USERS b
			WHERE a.author_Id = b.user_Id
			ORDER BY a.COMMENT_COUNT DESC) c
		limit 0,5
		]]>
	</select>
	
	<delete id="deleteBlogById" parameterClass="int">
		<![CDATA[
		delete from BLOGS where BLOG_ID = #value#
		]]>
	</delete>
</sqlMap>
